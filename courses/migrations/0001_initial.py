# Generated by Django 4.1.3 on 2023-05-04 20:21

import ckeditor.fields
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(max_length=200)),
                ('popularity', models.IntegerField(default=0, help_text='O popularidade')),
                ('featured', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.CharField(help_text='Resumo informativo do curso', max_length=140)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('overview', ckeditor.fields.RichTextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('publish', models.DateTimeField(blank=True)),
                ('status', models.CharField(choices=[('projeto', 'projeto'), ('analizando', 'analizando'), ('aprovado', 'aprovado'), ('cancelado', 'cancelado')], default='projeto', max_length=14)),
                ('tipo', models.CharField(choices=[('mais vendido', 'Mais Vendido'), ('classificação mais alta', 'Classificação Mais Alta'), ('normal', 'Normal')], default='normal', max_length=40)),
                ('popularity', models.IntegerField(default=0, help_text='O popularidade')),
                ('poster', models.URLField(blank=True)),
                ('linguagem', models.CharField(blank=True, max_length=150, null=True)),
                ('average_Rating', models.CharField(blank=True, default=0, max_length=3, null=True)),
                ('likes', models.IntegerField(blank=True, default=0, null=True)),
                ('total_horas', models.CharField(default='00:00:00', max_length=150)),
                ('views', models.IntegerField(default=0, help_text='O total de visualizações', null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, help_text='O preço do course', max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0, help_text='Desconto no course', max_digits=10)),
                ('certificate', models.BooleanField(default=False, help_text='O curso tem Certificado')),
                ('duration', models.DurationField(default=datetime.timedelta(0), null=True)),
                ('suggestion', models.BooleanField(default=False, help_text='Nossa principal sugestão para estudante')),
                ('complete_per', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Categoria', to='courses.categorie')),
            ],
            options={
                'verbose_name': 'curso',
                'verbose_name_plural': 'cursos',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('order', models.IntegerField(default=0)),
                ('file', models.FileField(upload_to='videos', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4'])])),
                ('duration', models.DurationField(default=datetime.timedelta(0), null=True)),
                ('preview', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('concluded', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SubCategorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(max_length=200)),
                ('popularity', models.IntegerField(default=0, help_text='O popularidade')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categoria', to='courses.categorie')),
                ('courses', models.ManyToManyField(blank=True, related_name='course_subcategoria', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Visualizacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('ultimo', models.IntegerField(default=0)),
                ('total', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_view', to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_views', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Visualização',
                'verbose_name_plural': 'Visualizações',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200)),
                ('popularity', models.IntegerField(default=0, help_text='O popularidade')),
                ('course', models.ManyToManyField(blank=True, related_name='course_subject', to='courses.course')),
                ('subcategorie', models.ManyToManyField(blank=True, related_name='subject_subcategorie', to='courses.subcategorie')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.AddField(
            model_name='subcategorie',
            name='subject',
            field=models.ManyToManyField(blank=True, related_name='subject_categoria', to='courses.subject'),
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='O nome da pessoa que vai receber o dados do curso', max_length=70)),
                ('email', models.EmailField(help_text='O email que vai receber a promo do curso', max_length=254, verbose_name='E-mail')),
                ('inicio', models.DateTimeField()),
                ('termino', models.DateTimeField(blank=True)),
                ('is_active', models.BooleanField(default=False, help_text='A ativo para do email')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Share_course', to='courses.course')),
            ],
            options={
                'verbose_name': 'Promoção',
                'verbose_name_plural': 'Promoções',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Titulo da avaliação', max_length=290)),
                ('message', models.TextField(help_text='O conteúdo da messagem')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('rate', models.FloatField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_course_review', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='O que você vai aprender', max_length=40)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements_course', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('inicio', models.DateTimeField()),
                ('termino', models.DateTimeField(blank=True)),
                ('is_active', models.BooleanField(default=False, help_text='A promoção está ativa')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Promotion_course', to='courses.course')),
            ],
            options={
                'verbose_name': 'Promoção',
                'verbose_name_plural': 'Promoções',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('order', models.IntegerField(default=0, help_text='O numero de classificação do modulo', null=True)),
                ('description', models.TextField(blank=True)),
                ('duration', models.DurationField(default=datetime.timedelta(0), null=True)),
                ('is_active', models.BooleanField()),
                ('content', models.ManyToManyField(help_text='conteúdo dos aulas', related_name='module_lesson', to='courses.lesson')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='courses.course')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_course_like', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('course', models.ManyToManyField(blank=True, related_name='course_level', to='courses.course')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='courses.module'),
        ),
        migrations.CreateModel(
            name='Learn',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='O que você vai aprender', max_length=40)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learn_course', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Favorito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adicionado', models.DateTimeField(auto_now_add=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favoritos', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_favoritos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Favorito',
                'verbose_name_plural': 'Favoritos',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Level_course', to='courses.level'),
        ),
        migrations.AddField(
            model_name='course',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_course', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='courses_joined', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ManyToManyField(related_name='assunto', to='courses.subject'),
        ),
        migrations.AddField(
            model_name='categorie',
            name='courses',
            field=models.ManyToManyField(blank=True, related_name='course_categoria', to='courses.course'),
        ),
        migrations.AddField(
            model_name='categorie',
            name='subcategorie',
            field=models.ManyToManyField(blank=True, related_name='categoria_subcategoria', to='courses.subcategorie'),
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.ImageField(upload_to='Media/author')),
                ('name', models.CharField(max_length=100, null=True)),
                ('about', models.TextField()),
                ('courses', models.ManyToManyField(related_name='author_course', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('module', models.IntegerField(blank=True, default=0, help_text='A quantidade modulos', null=True)),
                ('lesson', models.IntegerField(blank=True, default=0, help_text='A quantidade lesson', null=True)),
                ('views', models.IntegerField(blank=True, default=0, help_text='A quantidade lesson', null=True)),
                ('duration', models.DurationField(blank=True, default=0, null=True)),
                ('time', models.DurationField(blank=True, default=0, null=True)),
                ('rating', models.FloatField(blank=True, default=0, help_text='A média de pontuação', null=True)),
                ('students', models.IntegerField(blank=True, default=0, help_text='A quantidade alunos', null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_course', to='courses.course')),
            ],
            options={
                'verbose_name': 'Analytics',
                'verbose_name_plural': 'Analyzes',
            },
        ),
    ]
